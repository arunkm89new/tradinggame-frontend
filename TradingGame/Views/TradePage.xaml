<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="TradingGame.TradePage"
             x:Name="RootPage"
             xmlns:vm="clr-namespace:TradingGame.ViewModels"
             xmlns:converters="clr-namespace:TradingGame.Converters"
             BackgroundColor="{StaticResource TradingBackground}"
             Title="Trade">
    <ContentPage.Resources>
        <ResourceDictionary>
            <Style x:Key="TradeSizeButtonStyle" TargetType="Button">
                <Setter Property="BorderColor" Value="{StaticResource Gray200}" />
                <Setter Property="BorderWidth" Value="1" />
                <Setter Property="BackgroundColor" Value="White" />
                <Setter Property="TextColor" Value="Black" />
                <Setter Property="CornerRadius" Value="25" />
                <Setter Property="HeightRequest" Value="50" />
                <Setter Property="WidthRequest" Value="100" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="Margin" Value="5" />
                <Setter Property="FontSize" Value="16" />
            </Style>
            
            <Style x:Key="SelectedTradeSizeButtonStyle" TargetType="Button" BasedOn="{StaticResource TradeSizeButtonStyle}">
                <Setter Property="BackgroundColor" Value="#EEF1FE" />
                <Setter Property="TextColor" Value="Black" />
                <Setter Property="BorderColor" Value="#4285F4" />
            </Style>
            
            <Style x:Key="LeverageButtonStyle" TargetType="Button" BasedOn="{StaticResource TradeSizeButtonStyle}">
            </Style>
            
            <Style x:Key="SelectedLeverageButtonStyle" TargetType="Button" BasedOn="{StaticResource SelectedTradeSizeButtonStyle}">
            </Style>

            <converters:EqualityToStyleConverter x:Key="EqualityToStyleConverter" />
            <converters:MultiValueEqualityToStyleConverter x:Key="TradeSizeMultiValueStyleConverter" StyleKey1="TradeSizeButtonStyle" StyleKey2="SelectedTradeSizeButtonStyle" />
            <converters:MultiValueEqualityToStyleConverter x:Key="LeverageMultiValueStyleConverter" StyleKey1="LeverageButtonStyle" StyleKey2="SelectedLeverageButtonStyle" />
            <converters:MultiValueEqualityToBoolConverter x:Key="MultiValueEqualityToBoolConverter" />
            <converters:InverseBoolConverter x:Key="InverseBoolConverter" />
        </ResourceDictionary>
    </ContentPage.Resources>
    
    <ContentPage.BindingContext>
        <vm:TradePageViewModel />
    </ContentPage.BindingContext>
    
    <Grid RowDefinitions="Auto,*,Auto" 
          Padding="0">
          
        
        
        <!-- Main Content Area -->
        <Grid Grid.Row="1" RowDefinitions="Auto,Auto,*">
            
            <!-- Virtual Money Display -->
            <Grid Grid.Row="0" ColumnDefinitions="*,Auto" Margin="15,10,15,0">
                <VerticalStackLayout Grid.Column="0" Spacing="2">
                    <Label Text="Your Virtual Money" 
                           FontAttributes="Bold" 
                           FontSize="18" 
                           TextColor="{StaticResource TradingPriceGreen}"/>
                    <Label Text="{Binding CashBalance}" 
                           FontAttributes="Bold" 
                           FontSize="22" 
                           TextColor="Black"/>
                </VerticalStackLayout>
                <Button Grid.Column="1"
                        Text="+ $1000"
                        TextColor="White"
                        BackgroundColor="{StaticResource TradingBuyButton}"
                        CornerRadius="10"
                        HeightRequest="40"
                        FontSize="16"
                        FontAttributes="Bold"
                        Clicked="OnAddMoneyClicked"
                        VerticalOptions="Center"/>
            </Grid>
            
            <!-- Stock List -->
            <CollectionView x:Name="StockListView" 
                          Grid.Row="1"
                          SelectionMode="Single" 
                          SelectionChanged="OnStockSelected"
                          ItemsSource="{Binding Stocks}" 
                          SelectedItem="{Binding SelectedStock, Mode=TwoWay}"
                          HeightRequest="150" 
                          Margin="0,10,0,0"
                          HorizontalScrollBarVisibility="Never">
                <CollectionView.ItemsLayout>
                    <LinearItemsLayout Orientation="Horizontal" ItemSpacing="12" />
                </CollectionView.ItemsLayout>
                <CollectionView.ItemTemplate>
                    <DataTemplate>
                        <Grid WidthRequest="110" HeightRequest="140" Padding="5,0" x:Name="StockItemGrid">
                            <!-- Add TapGestureRecognizer to make the entire item tappable -->
                            <Grid.GestureRecognizers>
                                <TapGestureRecognizer 
                                    Command="{Binding Source={x:Reference RootPage}, Path=BindingContext.SelectStockCommand}"
                                    CommandParameter="{Binding .}" />
                            </Grid.GestureRecognizers>
                            
                            <!-- Main Background - Black rounded rectangle -->
                            <Frame BackgroundColor="#1A1A1A"
                                   CornerRadius="10"
                                   IsClippedToBounds="True"
                                   BorderColor="Transparent"
                                   Padding="0"
                                   HeightRequest="140"
                                   WidthRequest="100"
                                   InputTransparent="True">
                                <!-- Frame background trigger for selection -->
                                <Frame.Triggers>
                                    <DataTrigger TargetType="Frame"
                                                 Binding="{Binding Source={x:Reference StockListView}, Path=SelectedItem}"
                                                 Value="{Binding .}">
                                        <Setter Property="BackgroundColor" Value="#F79009" />
                                    </DataTrigger>
                                </Frame.Triggers>
                                
                                <Grid InputTransparent="True">
                                    <!-- Icon Circle -->
                                    <StackLayout VerticalOptions="Center" 
                                                 Spacing="5" 
                                                 InputTransparent="True">
                                        <Frame CornerRadius="40" 
                                               HeightRequest="80" 
                                               WidthRequest="80" 
                                               Padding="0"
                                               BackgroundColor="White"
                                               BorderColor="White"
                                               HorizontalOptions="Center"
                                               VerticalOptions="Center"
                                               Margin="0,10,0,0"
                                               HasShadow="False"
                                               InputTransparent="True">
                                            <Grid InputTransparent="True">
                                                <!-- Circle border that changes color when selected -->
                                                <Ellipse Stroke="White" 
                                                         StrokeThickness="2" 
                                                         Fill="Transparent"
                                                         WidthRequest="76" 
                                                         HeightRequest="76"
                                                         InputTransparent="True">
                                                    <Ellipse.Triggers>
                                                        <DataTrigger TargetType="Ellipse"
                                                                     Binding="{Binding Source={x:Reference StockListView}, Path=SelectedItem}"
                                                                     Value="{Binding .}">
                                                            <Setter Property="Stroke" Value="#4285F4" />
                                                            <Setter Property="StrokeThickness" Value="3" />
                                                        </DataTrigger>
                                                    </Ellipse.Triggers>
                                                </Ellipse>

                                                <!-- Icon Image -->
                                                <Image Source="{Binding IconPath}"
                                                       HeightRequest="50" 
                                                       WidthRequest="50"
                                                       HorizontalOptions="Center" 
                                                       VerticalOptions="Center"
                                                       Aspect="AspectFit"
                                                       InputTransparent="True" />
                                            </Grid>
                                        </Frame>
                                        
                                        <!-- Name Label -->
                                        <Label Text="{Binding Name}" 
                                               FontAttributes="Bold" 
                                               FontSize="16"
                                               TextColor="White"
                                               HorizontalOptions="Center"
                                               Margin="0,5,0,0"
                                               InputTransparent="True"/>
                                    </StackLayout>
                                </Grid>
                            </Frame>
                        </Grid>
                    </DataTemplate>
                </CollectionView.ItemTemplate>
            </CollectionView>
            
            <!-- Chart & Price Information -->
            <Grid Grid.Row="2" RowDefinitions="Auto,*" Margin="15,5,15,0">
                <!-- Price Header -->
                <Grid Grid.Row="0" RowDefinitions="Auto,Auto" Margin="0,10,0,10"
                     BackgroundColor="{StaticResource TradingChartBackground}"
                     Padding="10">
                    <Grid Grid.Row="0" ColumnDefinitions="*,Auto">
                        <Label x:Name="CurrencyLabel" FontSize="22" FontAttributes="Bold" 
                              Text="1 BTC = $105,473.17"/>
                    </Grid>
                    
                    <!-- Show ProfitLossText if trade is open, else show PriceLabel -->
                    <Label x:Name="PriceLabel" 
                           Grid.Row="1" 
                           Text="Today +253.137 (0.24%)" 
                           TextColor="{StaticResource TradingPriceGreen}"
                           FontSize="16"
                           IsVisible="{Binding TradePopupVM.IsTradeOpen, Converter={StaticResource InverseBoolConverter}}"/>
                    <Label x:Name="ProfitLossLabel"
                           Grid.Row="1"
                           Text="{Binding TradePopupVM.ProfitLossText}"
                           TextColor="{StaticResource TradingPriceGreen}"
                           FontSize="16"
                           IsVisible="{Binding TradePopupVM.IsTradeOpen}"/>
                </Grid>
                
                <!-- Trading Chart -->
                <Frame Grid.Row="1" 
                       HasShadow="True" 
                       CornerRadius="15" 
                       Padding="0" 
                       BorderColor="Transparent"
                       BackgroundColor="{StaticResource TradingChartBackground}">
                    <WebView x:Name="TradingViewWebView" />
                </Frame>
            </Grid>
        </Grid>
        
        <!-- Buy/Sell and Navigation Buttons -->
        <Grid Grid.Row="2" RowDefinitions="Auto, Auto" Margin="15,10,15,10">
            <!-- Show Close Trade Button if trade is open, else show Buy/Sell -->
            <Grid Grid.Row="0" ColumnDefinitions="*,*,Auto">
                <!-- Close Trade Button -->
                <Button Grid.ColumnSpan="2"
                        Text="CLOSE ORDER"
                        TextColor="White"
                        BackgroundColor="#FF4136"
                        CornerRadius="10"
                        HeightRequest="60"
                        FontSize="20"
                        FontAttributes="Bold"
                        Margin="0,0,0,0"
                        Clicked="OnCloseTradeClicked"
                        IsVisible="{Binding TradePopupVM.IsTradeOpen}"/>
                <!-- Sell Button -->
                <Button Grid.Column="0"
                        Text="SELL"
                        TextColor="White"
                        BackgroundColor="{StaticResource TradingSellButton}"
                        CornerRadius="10"
                        HeightRequest="60"
                        FontSize="20"
                        FontAttributes="Bold"
                        Margin="0,0,5,0"
                        Clicked="OnSellClicked"
                        IsVisible="{Binding TradePopupVM.IsTradeOpen, Converter={StaticResource InverseBoolConverter}}">
                    <Button.ImageSource>
                        <FontImageSource Glyph="↓" 
                                        FontFamily="Arial"
                                        Size="20"
                                        Color="White"/>
                    </Button.ImageSource>
                </Button>
                <!-- Buy Button -->
                <Button Grid.Column="1"
                        Text="BUY"
                        TextColor="White"
                        BackgroundColor="{StaticResource TradingBuyButton}"
                        CornerRadius="10"
                        HeightRequest="60"
                        FontSize="20"
                        FontAttributes="Bold"
                        Margin="5,0,0,0"
                        Clicked="OnBuyClicked"
                        IsVisible="{Binding TradePopupVM.IsTradeOpen, Converter={StaticResource InverseBoolConverter}}">
                    <Button.ImageSource>
                        <FontImageSource Glyph="↑" 
                                        FontFamily="Arial"
                                        Size="20"
                                        Color="White"/>
                    </Button.ImageSource>
                </Button>
            </Grid>
        </Grid>
        
        <!-- Trade Popup -->
        <Grid x:Name="TradePopup" 
              IsVisible="{Binding TradePopupVM.IsVisible}"
              BackgroundColor="#80000000"
              InputTransparent="False"
              Grid.RowSpan="3">
            
            <Frame BackgroundColor="White"
                   VerticalOptions="End"
                   CornerRadius="20"
                   Margin="0,0,0,-1"
                   Padding="0"
                   HasShadow="True">
                   
                <Grid RowDefinitions="Auto,Auto,Auto,Auto,Auto" 
                      Padding="20,10,20,20">
                      
                    <!-- Close button -->
                    <Button Grid.Row="0"
                            Text="✕"
                            FontSize="20"
                            WidthRequest="40"
                            HeightRequest="40"
                            Padding="0"
                            CornerRadius="20"
                            BackgroundColor="Gray"
                            HorizontalOptions="End"
                            Command="{Binding TradePopupVM.ClosePopupCommand}"/>
                            
                    <!-- Trade Size -->
                    <StackLayout Grid.Row="1" Spacing="15" Margin="0,10,0,0">
                        <Label Text="Trade Size" 
                               FontAttributes="Bold" 
                               FontSize="18"/>
                               
                        <ScrollView Orientation="Horizontal"
                                   HorizontalScrollBarVisibility="Never">
                            <CollectionView ItemsSource="{Binding TradePopupVM.TradeSizeChips}"
                                           SelectionMode="None"
                                           HorizontalScrollBarVisibility="Never">
                                <CollectionView.ItemsLayout>
                                    <LinearItemsLayout Orientation="Horizontal" ItemSpacing="10" />
                                </CollectionView.ItemsLayout>
                                <CollectionView.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Button Text="{Binding Value}"
                                                Command="{Binding Source={x:Reference RootPage}, Path=BindingContext.TradePopupVM.SelectTradeSizeCommand}"
                                                CommandParameter="{Binding .}">
                                                <Button.Style>
                                                    <Style TargetType="Button" BasedOn="{StaticResource TradeSizeButtonStyle}">
                                                        <Style.Triggers>
                                                            <DataTrigger TargetType="Button" Binding="{Binding IsSelected}" Value="True">
                                                                <Setter Property="BackgroundColor" Value="#EEF1FE" />
                                                                <Setter Property="TextColor" Value="Black" />
                                                                <Setter Property="BorderColor" Value="#4285F4" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                            </Button>
                                            <BoxView BackgroundColor="#FF4136"
                                                     HeightRequest="3"
                                                     WidthRequest="70"
                                                     HorizontalOptions="Center"
                                                     VerticalOptions="End"
                                                     Margin="0,0,0,-5"
                                                     IsVisible="{Binding IsSelected}" />
                                        </Grid>
                                    </DataTemplate>
                                </CollectionView.ItemTemplate>
                            </CollectionView>
                        </ScrollView>
                    </StackLayout>
                    
                    <!-- Leverage -->
                    <StackLayout Grid.Row="2" Spacing="15" Margin="0,20,0,0">
                        <Label Text="Leverage" 
                               FontAttributes="Bold" 
                               FontSize="18"/>
                               
                        <ScrollView Orientation="Horizontal"
                                   HorizontalScrollBarVisibility="Never">
                            <CollectionView ItemsSource="{Binding TradePopupVM.LeverageChips}"
                                           SelectionMode="None"
                                           HorizontalScrollBarVisibility="Never">
                                <CollectionView.ItemsLayout>
                                    <LinearItemsLayout Orientation="Horizontal" ItemSpacing="10" />
                                </CollectionView.ItemsLayout>
                                <CollectionView.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Button Text="{Binding Value}"
                                                Command="{Binding Source={x:Reference RootPage}, Path=BindingContext.TradePopupVM.SelectLeverageCommand}"
                                                CommandParameter="{Binding .}">
                                                <Button.Style>
                                                    <Style TargetType="Button" BasedOn="{StaticResource LeverageButtonStyle}">
                                                        <Style.Triggers>
                                                            <DataTrigger TargetType="Button" Binding="{Binding IsSelected}" Value="True">
                                                                <Setter Property="BackgroundColor" Value="#EEF1FE" />
                                                                <Setter Property="TextColor" Value="Black" />
                                                                <Setter Property="BorderColor" Value="#4285F4" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                            </Button>
                                            <BoxView BackgroundColor="#FF4136"
                                                     HeightRequest="3"
                                                     WidthRequest="70"
                                                     HorizontalOptions="Center"
                                                     VerticalOptions="End"
                                                     Margin="0,0,0,-5"
                                                     IsVisible="{Binding IsSelected}" />
                                        </Grid>
                                    </DataTemplate>
                                </CollectionView.ItemTemplate>
                            </CollectionView>
                        </ScrollView>
                    </StackLayout>
                    
                    <!-- Spacing -->
                    <BoxView Grid.Row="3" BackgroundColor="White" HeightRequest="20" />
                    
                    <!-- Open Trade Button -->
                    <Button Grid.Row="4"
                            Text="{Binding TradePopupVM.OpenTradeButtonText}"
                            TextColor="White"
                            BackgroundColor="{Binding TradePopupVM.OpenTradeButtonColor}"
                            CornerRadius="10"
                            HeightRequest="60"
                            FontSize="16"
                            FontAttributes="Bold"
                            Command="{Binding TradePopupVM.OpenTradeCommand}"/>
                </Grid>
            </Frame>
        </Grid>
        
        <!-- Trade Summary Popup -->
        <Grid x:Name="TradeSummaryPopup"
              IsVisible="{Binding TradePopupVM.IsTradeSummaryVisible}"
              BackgroundColor="#80000000"
              InputTransparent="False"
              Grid.RowSpan="3"
              VerticalOptions="FillAndExpand"
              HorizontalOptions="FillAndExpand">
            <Frame BackgroundColor="White"
                   VerticalOptions="Center"
                   HorizontalOptions="Center"
                   CornerRadius="20"
                   Padding="30"
                   HasShadow="True"
                   WidthRequest="340"
                   MinimumHeightRequest="400">
                <StackLayout Spacing="18" HorizontalOptions="Center">
                    <Label Text="{Binding TradePopupVM.TradeSummary.HeaderText}" 
                           FontSize="22" FontAttributes="Bold" 
                           HorizontalOptions="Center"/>
                    <Label Text="{Binding TradePopupVM.TradeSummary.AssetName}" 
                           FontSize="18" FontAttributes="Bold" 
                           HorizontalOptions="Center"/>
                    <Label Text="{Binding TradePopupVM.TradeSummary.TradeType}" 
                           FontSize="16" HorizontalOptions="Center"/>
                    <Label FontSize="16">
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="Trade Size: "/>
                                <Span Text="{Binding TradePopupVM.TradeSummary.TradeSizeDisplay}"/>
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                    <Label FontSize="16">
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="Leverage: "/>
                                <Span Text="{Binding TradePopupVM.TradeSummary.LeverageDisplay}"/>
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                    <Label FontSize="16">
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="Entry: "/>
                                <Span Text="{Binding TradePopupVM.TradeSummary.EntryPriceDisplay}"/>
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                    <Label FontSize="16">
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="Exit: "/>
                                <Span Text="{Binding TradePopupVM.TradeSummary.ExitPriceDisplay}"/>
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                    <Label FontSize="16">
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="Duration: "/>
                                <Span Text="{Binding TradePopupVM.TradeSummary.Duration}"/>
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                    <!--<Label FontSize="16">
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="Commission: "/>
                                <Span Text="{Binding TradePopupVM.TradeSummary.CommissionDisplay}"/>
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>-->
                    <Label FontSize="18" FontAttributes="Bold" 
                           TextColor="{Binding TradePopupVM.TradeSummary.ProfitLossColor}">
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="P/L: "/>
                                <Span Text="{Binding TradePopupVM.TradeSummary.ProfitLossDisplay}"/>
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                    <Button Text="OK"
                            Command="{Binding TradePopupVM.OkCommand}"
                            BackgroundColor="#4285F4"
                            TextColor="White"
                            CornerRadius="10"
                            HeightRequest="50"
                            FontSize="16"
                            FontAttributes="Bold"
                            HorizontalOptions="Center"
                            Margin="0,20,0,0"/>
                </StackLayout>
            </Frame>
        </Grid>
        <!-- End Trade Summary Popup -->
    </Grid>
</ContentPage>
